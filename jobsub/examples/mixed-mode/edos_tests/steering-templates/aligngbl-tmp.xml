<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Wed Feb 11 16:20:29 2015

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="AIDA"/>
      <processor name="HitLocalToGlobal"/>
      <processor name="MyEUTelAlignGBL"/>
      <processor name="PedeToGEAR"/>
      <processor name="EUTelUtilityPrintEventNumber"/>
   </execute>

   <global>
      <parameter name="LCIOInputFiles"> @LcioPath@/@FilePrefix@-hitmaker.slcio </parameter>
      <parameter name="GearXMLFile" value="@GearFilePath@/@GearFile@"/>
      <parameter name="MaxRecordNumber" value="@MaxRecordNumber@"/>
      <parameter name="SkipNEvents" value="@SkipNEvents@"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="@Verbosity@"/>
   </global>

 <processor name="AIDA" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int" value="1"/>
  <!-- filename without extension-->
  <parameter name="FileName" type="string" value="@HistogramPath@/@FilePrefix@-aligngbl-histo"/>
  <!-- type of output file root (default) or xml )-->
  <parameter name="FileType" type="string" value="root"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="HitLocalToGlobal" type="EUTelProcessorCoordinateTransformHits">
 <!--EUTelLocaltoGlobalHitMaker is responsible to change local coordinates to global. This is done using the EUTelGeometryClass-->
  <!--Local input hit collection name-->
  <parameter name="hitCollectionNameInput" type="string" lcioInType="TrackerHit"> local_hit </parameter>
  <!--Global output hit collection name-->
  <parameter name="hitCollectionNameOutput" type="string" lcioOutType="TrackerHit"> hit </parameter>
  <!--Set to true to undo the alignment instead-->
  <!--parameter name="Undo Alignment (boolean)" type="bool" value="false"/-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

<processor name="MyEUTelAlignGBL" type="EUTelAlignGBL">
 <!--EUTelAlignGBL uses the MILLE program to write data files for MILLEPEDE II.-->
  <!--Number of alignment constants used. Available mode are: 
XYZShifts - shifts in X and Y
XYShiftsRotZ - shifts in X and Y and rotation around the Z axis,
XYZShiftsRotZ - shifts in X,Y and Z and rotation around the Z axis-->
  <parameter name="alignMode" type="string">@AlignMode@ </parameter>
  <!--Name of the Millepede binary file.-->
  <!--parameter name="BinaryFilename" type="string">mille.bin </parameter-->
  <!--The three sensors used as the downstream triplet.-->
  <!--parameter name="DownstreamTriplet" type="IntVec">3 4 5  </parameter-->
  <!--Beam energy [GeV]-->
  <parameter name="ebeam" type="double">4.0 </parameter>
  <!--Exclude planes from fit according to their sensor ids.-->
  <parameter name="excludePlanes" type="IntVec"> @ExcludePlanes@ </parameter>
  <!--Fix sensor planes in the fit according to their sensor ids.-->
  <parameter name="fixedPlanes" type="IntVec"> @FixedPlanes@ </parameter>
  <!--Generate a steering file for the pede program.-->
  <parameter name="generatePedeSteerfile" type="int">1 </parameter>
  <!--Hit collections name-->
  <parameter name="hitCollectionName" type="StringVec" lcioInType="TrackerHit">hit </parameter>
  <!--Bool: 1/0 (yes/no)-->
  <parameter name="IsFirstAlignStep" type="int">1 </parameter>
  <!--The last plane (z-ordered) which still should be attached to the upstream triplet.-->
  <!--parameter name="LastUpstreamSensor" type="int">5 </parameter-->
  <!--Maximal number of track candidates.-->
  <!--parameter name="MaxTrackCandidates" type="int">2000 </parameter-->
  <!--Maximal number of track candidates (Total).-->
  <!--parameter name="MaxTrackCandidatesTotal" type="int">10000000 </parameter-->
  <!--Name of the steering file for the pede program.-->
  <!--parameter name="PedeSteerfileName" type="string">steer_mille.txt </parameter-->
  <!--X Resolution of sensors (z-ordered).-->
  <parameter name="resolutionX" type="FloatVec"> @ResolutionX@ </parameter>
  <!--Y Resolution of sensors (z-ordered).-->
  <parameter name="resolutionY" type="FloatVec"> @ResolutionY@ </parameter>
  <!--The three sensors used as the upstream triplet.-->
  <!--parameter name="UpstreamTriplet" type="IntVec">0 1 2  </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
  <!--Downstream triplet residual cut [um]-->
  <!--parameter name="driCut" type="double">1.0 </parameter-->
  <!--Global factor to Highland formula-->
  <parameter name="kappa" type="double">1.0 </parameter>
  <!--Upstream-Downstream Track matching cut [um]-->
  <!--parameter name="sixCut" type="double">1.0 </parameter-->
  <!--t(d)riplet slope cut [radian]-->
  <!--parameter name="slopeCut" type="double">0.01 </parameter-->
  <!--Upstream triplet residual cut [um]-->
  <!--parameter name="triCut" type="double">1.0 </parameter-->
  <parameter name="downstreamTripletResidualCut" type="double"> @DownstreamTripletCut@ </parameter>
  <!--Downstream triplet slope cut [mrad]-->
  <parameter name="downstreamTripletSlopeCut" type="double"> @DownstreamSlopeCut@ </parameter>
  <parameter name="tripletsMatchingCut" type="double"> @TripletMatchingCut@ </parameter>
  <!--The three sensors used as the upstream triplet-->
  <parameter name="upstreamTripletResidualCut" type="double"> @UpstreamTripletCut@ </parameter>
  <!--Upstream triplet slope cut [mrad]-->
  <parameter name="upstreamTripletSlopeCut" type="double"> @UpstreamSlopeCut@ </parameter>
  <parameter name="DUTCuts" type="FloatVec"> @DUTCuts@ </parameter>
  <parameter name="chi2Cut" type="double"> -1 </parameter>
  <parameter name="fixedXShift" type="IntVec"> @FixedXShift@ </parameter>
  <parameter name="fixedYShift" type="IntVec"> @FixedYShift@ </parameter>
  <parameter name="fixedZShift" type="IntVec"> @FixedZShift@ </parameter>
  <parameter name="fixedXRot" type="IntVec"> @FixedXRot@ </parameter>
  <parameter name="fixedYRot" type="IntVec"> @FixedYRot@ </parameter>
  <parameter name="fixedZRot" type="IntVec"> @FixedZRot@ </parameter>
</processor>

 <processor name="PedeToGEAR" type="EUTelPedeGEAR">
 <!--EUTelPedeGEAR calls PEDE to process a MILLE binary file and create an updated GEAR file with the updated MILLEPEDE II alignment constants.-->
  <!--Number of alignment constants used. Available mode are: 
		XYShiftsRotZ - shifts in the X and Y directions and a rotation around the Z axis,
		XYShifts - only shifts in the X and Y directions
		XYShiftsAllRot - shifts in the X,Y and Z directions and rotations around all three axis-->
  <parameter name="AlignMode" type="string"> @AlignMode@ </parameter>
  <!--Exclude planes from fit according to their sensor ids.-->
  <parameter name="ExcludePlanes" type="IntVec"> @ExcludePlanes@ </parameter>
  <!--Fix sensor planes in the fit according to their sensor ids.-->
  <parameter name="FixedPlanes" type="IntVec"> @FixedPlanes@ </parameter>
  <!--Suffix for the new GEAR file, set to empty string (this is not default!) to overwrite old GEAR file-->
  <parameter name="NewGEARSuffix" type="string"> _aligned </parameter>
  <!--Offset scale factor.-->
  <parameter name="OffsetScaleFactor" type="int">1 </parameter>
  <!--Name of the steering file for the pede program.-->
  <parameter name="PedeSteerfileName" type="string"> steer_mille.txt </parameter>
  <!--Apply the obtained rotation to the preexisting offset vector or not..-->
  <!--parameter name="RotateOffsetVec" type="bool">false </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>

 <processor name="EUTelUtilityPrintEventNumber" type="EUTelUtilityPrintEventNumber">
 <!--EUTelUtilityPrintEventNumber prints event number to screen depending on the verbosity level-->
  <!--Print event number for every n-th event-->
  <parameter name="EveryNEvents" type="int" value="1000"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <parameter name="Verbosity" type="string" value="MESSAGE4"/>
  <!--print the event timestamp as read from LCIO-->
  <!--parameter name="printTimestamp" type="bool" value="false"/-->
</processor>

</marlin>
